// <auto-generated />
using System;
using Key_Castle_DataAccess;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Key_Castle_DataAccess.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20210913080843_initToDB")]
    partial class initToDB
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.18")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Key_Castle_Models.Admin", b =>
                {
                    b.Property<int>("Admin_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Type")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Admin_id");

                    b.ToTable("Admin");
                });

            modelBuilder.Entity("Key_Castle_Models.Buyer", b =>
                {
                    b.Property<int>("Buyer_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Buyer_id");

                    b.ToTable("Buyer");
                });

            modelBuilder.Entity("Key_Castle_Models.Buyer_Profile", b =>
                {
                    b.Property<int>("Buyer_pro_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Buyer_id")
                        .HasColumnType("int");

                    b.Property<string>("Buyer_photo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FullName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Item_purchase")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Buyer_pro_id");

                    b.HasIndex("Buyer_id");

                    b.ToTable("Buyer_Profile");
                });

            modelBuilder.Entity("Key_Castle_Models.Cart", b =>
                {
                    b.Property<int>("Cart_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Buyer_id")
                        .HasColumnType("int");

                    b.Property<int?>("Order_id")
                        .HasColumnType("int");

                    b.Property<int>("Total_price")
                        .HasColumnType("int");

                    b.Property<int>("Total_qty")
                        .HasColumnType("int");

                    b.HasKey("Cart_id");

                    b.HasIndex("Buyer_id");

                    b.HasIndex("Order_id");

                    b.ToTable("Cart");
                });

            modelBuilder.Entity("Key_Castle_Models.Category", b =>
                {
                    b.Property<int>("Category_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Category_name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("Category_id");

                    b.ToTable("Category");
                });

            modelBuilder.Entity("Key_Castle_Models.Order", b =>
                {
                    b.Property<int>("Order_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Amount")
                        .HasColumnType("int");

                    b.Property<int>("Buyer_id")
                        .HasColumnType("int");

                    b.Property<string>("Date")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Order_details_id")
                        .HasColumnType("int");

                    b.Property<int?>("Product_id")
                        .HasColumnType("int");

                    b.Property<int>("Seller_id")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("Order_id");

                    b.HasIndex("Buyer_id");

                    b.HasIndex("Order_details_id");

                    b.HasIndex("Product_id");

                    b.HasIndex("Seller_id");

                    b.ToTable("Order");
                });

            modelBuilder.Entity("Key_Castle_Models.Order_Details", b =>
                {
                    b.Property<int>("Order_details_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Price")
                        .HasColumnType("int");

                    b.Property<int>("Product_id")
                        .HasColumnType("int");

                    b.Property<int>("Qty")
                        .HasColumnType("int");

                    b.HasKey("Order_details_id");

                    b.HasIndex("Product_id");

                    b.ToTable("Order_Details");
                });

            modelBuilder.Entity("Key_Castle_Models.Payment", b =>
                {
                    b.Property<int>("Pay_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Amount")
                        .HasColumnType("int");

                    b.Property<int>("Buyer_id")
                        .HasColumnType("int");

                    b.Property<int?>("Cart_id")
                        .HasColumnType("int");

                    b.Property<string>("Method")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Seller_id")
                        .HasColumnType("int");

                    b.HasKey("Pay_id");

                    b.HasIndex("Buyer_id");

                    b.HasIndex("Cart_id");

                    b.HasIndex("Seller_id");

                    b.ToTable("Payment");
                });

            modelBuilder.Entity("Key_Castle_Models.Product", b =>
                {
                    b.Property<int>("Product_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Category_id")
                        .HasColumnType("int");

                    b.Property<string>("Desc")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Price")
                        .HasColumnType("int");

                    b.Property<string>("Product_name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Product_photo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Qty")
                        .HasColumnType("int");

                    b.HasKey("Product_id");

                    b.HasIndex("Category_id");

                    b.ToTable("Product");
                });

            modelBuilder.Entity("Key_Castle_Models.Seller", b =>
                {
                    b.Property<int>("Seller_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Seller_id");

                    b.ToTable("Seller");
                });

            modelBuilder.Entity("Key_Castle_Models.Seller_Profile", b =>
                {
                    b.Property<int>("Seller_pro_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Item_sold")
                        .HasColumnType("int");

                    b.Property<int>("Seller_id")
                        .HasColumnType("int");

                    b.Property<string>("Seller_photo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ShopName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Seller_pro_id");

                    b.HasIndex("Seller_id");

                    b.ToTable("Seller_Profile");
                });

            modelBuilder.Entity("Key_Castle_Models.Buyer_Profile", b =>
                {
                    b.HasOne("Key_Castle_Models.Buyer", "Buyer")
                        .WithMany()
                        .HasForeignKey("Buyer_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Key_Castle_Models.Cart", b =>
                {
                    b.HasOne("Key_Castle_Models.Buyer", "Buyer")
                        .WithMany()
                        .HasForeignKey("Buyer_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Key_Castle_Models.Order", "Order")
                        .WithMany()
                        .HasForeignKey("Order_id");
                });

            modelBuilder.Entity("Key_Castle_Models.Order", b =>
                {
                    b.HasOne("Key_Castle_Models.Buyer", "Buyer")
                        .WithMany()
                        .HasForeignKey("Buyer_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Key_Castle_Models.Order_Details", "Order_Details")
                        .WithMany()
                        .HasForeignKey("Order_details_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Key_Castle_Models.Product", "Product")
                        .WithMany()
                        .HasForeignKey("Product_id");

                    b.HasOne("Key_Castle_Models.Seller", "Seller")
                        .WithMany()
                        .HasForeignKey("Seller_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Key_Castle_Models.Order_Details", b =>
                {
                    b.HasOne("Key_Castle_Models.Product", "Product")
                        .WithMany()
                        .HasForeignKey("Product_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Key_Castle_Models.Payment", b =>
                {
                    b.HasOne("Key_Castle_Models.Buyer", "Buyer")
                        .WithMany()
                        .HasForeignKey("Buyer_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Key_Castle_Models.Cart", "Cart")
                        .WithMany()
                        .HasForeignKey("Cart_id");

                    b.HasOne("Key_Castle_Models.Seller", "Seller")
                        .WithMany()
                        .HasForeignKey("Seller_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Key_Castle_Models.Product", b =>
                {
                    b.HasOne("Key_Castle_Models.Category", "Category")
                        .WithMany()
                        .HasForeignKey("Category_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Key_Castle_Models.Seller_Profile", b =>
                {
                    b.HasOne("Key_Castle_Models.Seller", "Seller")
                        .WithMany()
                        .HasForeignKey("Seller_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
